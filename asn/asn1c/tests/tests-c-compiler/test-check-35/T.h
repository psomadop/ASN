/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "ModuleTestSetAndUntaggedChoice"
 * 	found in "/Users/tasospsomadopoulos/Documents/asn1_sample/asn1c/tests/tests-asn1c-compiler/35-set-choice-OK.asn1"
 * 	`asn1c -S /Users/tasospsomadopoulos/Documents/asn1_sample/asn1c/skeletons -flink-skeletons -Wdebug-compiler`
 */

#ifndef	_T_H_
#define	_T_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NumericString.h>
#include <BOOLEAN.h>
#include "OID.h"
#include <IA5String.h>
#include <ObjectDescriptor.h>
#include "Choice.h"
#include <constr_CHOICE.h>
#include <constr_SET.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */

/*
 * Method of determining the components presence
 */
typedef enum T_PR {
	T_PR_a,	/* Member a is present */
	T_PR_b,	/* Member b is present */
	T_PR_c,	/* Member c is present */
	T_PR_d,	/* Member d is present */
} T_PR;
typedef enum b_PR {
	b_PR_NOTHING,	/* No components present */
	b_PR_b1,
	b_PR_b2,
	b_PR_b3
} b_PR;

/* Forward declarations */
struct OID;

/* T */
typedef struct T {
	NumericString_t	 a;
	struct b {
		b_PR present;
		union T__b_u {
			IA5String_t	 b1;
			ObjectDescriptor_t	 b2;
			Choice_t	 b3;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} b;
	BOOLEAN_t	 c;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct OID	*d;
	
	/* Presence bitmask: ASN_SET_ISPRESENT(pT, T_PR_x) */
	unsigned int _presence_map
		[((4+(8*sizeof(unsigned int))-1)/(8*sizeof(unsigned int)))];
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} T_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_T;

#ifdef __cplusplus
}
#endif

#endif	/* _T_H_ */
#include <asn_internal.h>
